name: Test Build CI

on:
  push:
    branches: ['**']
  pull_request:
    types: [closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  PR_NUMBER: ${{ github.event.number }}

jobs:
  test-build:
    if: github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-gnu
    name: Test build ${{ matrix.target }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get variables
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Run PNPM action
        uses: ./.github/pnpm-action
      - if: ${{ steps.cache-pnpm.outputs.cache-hit != 'true' }}
        name: Install NPM dependencies
        run: pnpm install

      - name: Setup Rust toolchain
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal --target ${{ matrix.target }}
          cargo install cargo-make

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "rust-${{ matrix.target }}"
          env-vars: "RUSTFLAGS"
          cache-directories: ""
          cache-all-crates: true

      - name: Compile binary
        run: cargo build --release

  create-tag:
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'
    needs: [test-build]
    name: Create new tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get app version
        id: getvar
        run: echo "app_version=$(cat package.json | jq -r .version)" >> $GITHUB_OUTPUT
      - uses: EndBug/latest-tag@latest
        with:
          ref: v${{ steps.getvar.outputs.app_version }}-b${{env.PR_NUMBER}}
          description: Generated from GitHub Actions for PR#${{env.PR_NUMBER}}
          force-branch: false
