name: Release Stable

# References:
# - https://docs.docker.com/build/ci/github-actions/manage-tags-labels/
# - https://ectobit.com/blog/speed-up-github-actions-rust-pipelines/

on:
  push:
    branches: ['release']
    paths: ['**/Cargo.toml', '.github/workflows/release-stable.yml']

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: write
  discussions: write
  deployments: write
  packages: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  CONTAINER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PR_NUMBER: ${{ github.event.number }}
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

jobs:
  docker-images:
    runs-on: ubuntu-latest
    name: Docker images
    steps:
      - uses: actions/checkout@v3
      - name: Setup release version
        working-directory: .
        shell: bash
        run: |
          echo RELEASE_VERSION=$(sed -nE 's/^\s*version = "(.*?)"/\1/p' Cargo.toml) >> $GITHUB_ENV
          echo SHORT_SHA=$(git rev-parse --short ${{ github.sha }}) >> $GITHUB_ENV

      - name: Validate release version
        shell: bash
        run: echo "Creating release v${{ env.RELEASE_VERSION }} - ${{ env.SHORT_SHA }}"

      - name: Create and publish docker images
        uses: ./.github/docker-action
        with:
          registry-host: ${{ env.CONTAINER_REGISTRY }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}
          image-tags: |
            type=raw,enable=true,priority=100,suffix=-${{ env.SHORT_SHA }},value=${{ env.RELEASE_VERSION }}
            type=raw,enable=true,priority=200,value=edge
          image-platform: linux/amd64
