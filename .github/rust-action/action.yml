name: rust-action
description: Setup Rust Toolchain

inputs:
  target-toolchain:
    description: Target toolchain
    default: x86_64-unknown-linux-gnu
    required: false

runs:
  using: composite
  steps:
    - name: Get MSRV from Cargo.toml
      id: msrv
      shell: bash
      run: grep rust-version Cargo.toml | cut -d'"' -f2 | sed 's/^/version=/' >> $GITHUB_OUTPUT

    - name: Install Rust Toolchain
      shell: bash
      run: |
        rustup set auto-self-update disable
        rustup toolchain install ${{ steps.msrv.outputs.version }} --profile minimal --target ${{ inputs.target-toolchain }}

    - name: Install additional libraries (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        BINSTALL_SCRIPT="https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh"
        curl -L --proto '=https' --tlsv1.2 -sSf $BINSTALL_SCRIPT | bash

    - name: Install additional libraries (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
        vcpkg install openssl:x64-windows-static-md 7zip
        cargo install cargo-binstall --locked

    - name: Install Cargo libraries
      shell: bash
      run: cargo binstall --no-confirm cargo-make tsync

    - name: Caching Rust Toolchain
      uses: swatinem/rust-cache@v2
      with:
        prefix-key: "rust-${{ inputs.target-toolchain }}"
        cache-all-crates: true

    - name: Cargo libraries check
      shell: bash
      run: cargo check --all --bins --tests
