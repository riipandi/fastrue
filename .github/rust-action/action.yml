name: rust-action
description: Setup Rust Toolchain
inputs:
  target-toolchain:
    description: Target toolchain
    default: x86_64-unknown-linux-gnu
    required: false
runs:
  using: composite
  steps:
    - name: Get MSRV from Cargo.toml
      id: msrv
      shell: bash
      run: grep rust-version Cargo.toml | cut -d'"' -f2 | sed 's/^/version=/' >> $GITHUB_OUTPUT
    - uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ steps.msrv.outputs.version }}
        targets: ${{ inputs.target-toolchain }}
        components: rustfmt, clippy

    - name: Setup Rust Toolchain
      shell: bash
      run: |
        cargo install cargo-make toml-cli
        cargo check --all --bins --examples --tests

    # - name: Setup Rust Toolchain
    #   shell: bash
    #   run: |
    #     rustup set auto-self-update disable
    #     rustup toolchain install stable --profile minimal --target ${{ inputs.target-toolchain }}
    #     cargo install cargo-make toml-cli

    # - name: Caching Rust Toolchain
    #   uses: actions/cache@v3
    #   continue-on-error: false
    #   with:
    #     path: |
    #       ~/.cargo/bin/
    #       ~/.cargo/registry/index/
    #       ~/.cargo/registry/cache/
    #       ~/.cargo/git/db/
    #       target/
    #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    #     restore-keys: ${{ runner.os }}-cargo-
